data Bool : Type where {
    False : Bool 
  | True : Bool
}

data Nat : Type where {
   Z : Nat
 | S : pi k : Nat . Nat
}

not : pi x : Bool . Bool;
not {
  not False = True;
  not True = False;
}

not True;
not False;

plus : pi x : Nat . pi y : Nat . Nat;
plus {
  y    . plus Z y     = y;
  k, y . plus (S k) y = S (plus k y);
}

plus (S (S Z)) (S (S (S Z)));
