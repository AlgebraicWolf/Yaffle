data Nat : Type where
     Z : Nat
     S : Nat -> Nat

plus : Nat -> Nat -> Nat
plus Z y = y
plus (S k) y = S (plus k y)

ctest : Nat -> Nat
ctest x
  = case (plus x x) of
         Z => x
         n => plus n n

ctestS : Nat -> Nat
ctestS x
  = case S (plus x x) of
         S Z => x
         S n => plus n n
